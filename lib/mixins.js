// Generated by CoffeeScript 1.10.0

/**
 * Include a class or object with functions into another class.
 * @param  {Object} mixin               [description]
 * @param  {Boolean} wrapOldFunction  [description]
 */

(function() {
  var _, exports;

  exports = {
    bootstrap: function() {
      return Function.prototype.include = function(mixin) {
        var funct, methodName, ref, tmpSuper;
        if (!mixin) {
          throw 'Supplied mixin was not found';
        }
        if (!_) {
          throw 'Lodash was not found';
        }
        if (_.isFunction(mixin)) {
          mixin = mixin.prototype;
        }
        if (this.__super__) {
          tmpSuper = _.extend({}, this.__super__);
          tmpSuper.constructor = this.__super__.constructor;
        }
        this.__super__ = tmpSuper || {};
        for (methodName in mixin) {
          funct = mixin[methodName];
          if (!(methodName !== 'included')) {
            continue;
          }
          this.__super__[methodName] = funct;
          if (!this.prototype.hasOwnProperty(methodName)) {
            this.prototype[methodName] = funct;
          }
        }
        if ((ref = mixin.included) != null) {
          ref.apply(this);
        }
        return this;
      };
    }
  };

  if ((typeof module !== "undefined" && module !== null ? module.exports : void 0) != null) {
    if (typeof require !== "undefined" && require !== null) {
      _ = require('lodash');
    }
    module.exports = exports;
  } else {
    _ = window._;
    window.CoffeeScriptMixins = exports;
  }

}).call(this);
